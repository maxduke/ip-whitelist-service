name: Build and Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number for this release (e.g., v1.0.0)'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      matrix:
        goarch: [amd64, arm64]
    outputs:
      version: ${{ steps.set_version.outputs.version }}
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17
    
    - name: Build
      env:
        GOOS: linux
        GOARCH: ${{ matrix.goarch }}
      run: |
        mkdir -p dist
        go build -v -o dist/ip-whitelist-service-linux-${{ matrix.goarch }} ./main.go

    - name: Set Version Output
      id: set_version
      run: echo "::set-output name=version::${{ github.event.inputs.version }}"
    
    - name: Upload Build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ip-whitelist-service-${{ matrix.goarch }}
        path: dist/ip-whitelist-service-linux-${{ matrix.goarch }}

  release:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    steps:
    - name: Download Artifacts (amd64)
      uses: actions/download-artifact@v4
      with:
        name: ip-whitelist-service-amd64
        path: ./dist

    - name: Download Artifacts (arm64)
      uses: actions/download-artifact@v4
      with:
        name: ip-whitelist-service-arm64
        path: ./dist

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ needs.build.outputs.version }}
        release_name: Release ${{ needs.build.outputs.version }}
        draft: false
        prerelease: false

    - name: Upload Release Assets (amd64)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/ip-whitelist-service-linux-amd64
        asset_name: ip-whitelist-service-linux-amd64
        asset_content_type: application/octet-stream
    
    - name: Upload Release Assets (arm64)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/ip-whitelist-service-linux-arm64
        asset_name: ip-whitelist-service-linux-arm64
        asset_content_type: application/octet-stream